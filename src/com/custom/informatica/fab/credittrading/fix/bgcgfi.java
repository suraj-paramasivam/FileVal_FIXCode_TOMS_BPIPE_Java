/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.custom.informatica.fab.credittrading.fix;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class bgcgfi extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -319481571674436100L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"bgcgfi\",\"namespace\":\"com.custom.informatica.fab.credittrading.fix\",\"fields\":[{\"name\":\"MSGTYPE\",\"type\":[\"string\",\"null\"]},{\"name\":\"MSGSEQNUM\",\"type\":[\"int\",\"null\"]},{\"name\":\"SENDERCOMPID\",\"type\":[\"string\",\"null\"]},{\"name\":\"SENDINGTIME\",\"type\":[\"string\",\"null\"]},{\"name\":\"TARGETCOMPID\",\"type\":[\"string\",\"null\"]},{\"name\":\"MDREQID\",\"type\":[\"string\",\"null\"]},{\"name\":\"MDUPDATEACTION\",\"type\":[\"string\",\"null\"]},{\"name\":\"FULLSYMBOL\",\"type\":[\"string\",\"null\"]},{\"name\":\"ISIN\",\"type\":[\"string\",\"null\"]},{\"name\":\"MDENTRYPX\",\"type\":[\"int\",\"null\"]},{\"name\":\"MDENTRYSIZE\",\"type\":[\"string\",\"null\"]},{\"name\":\"MDENTRYTYPE\",\"type\":[\"string\",\"null\"]},{\"name\":\"MDENTRYID\",\"type\":[\"string\",\"null\"]},{\"name\":\"TRADINGSESSIONID\",\"type\":[\"string\",\"null\"]},{\"name\":\"ORDERID\",\"type\":[\"string\",\"null\"]},{\"name\":\"MDENTRYDATE\",\"type\":[\"string\",\"null\"]},{\"name\":\"MDENTRYTIME\",\"type\":[\"string\",\"null\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<bgcgfi> ENCODER =
      new BinaryMessageEncoder<bgcgfi>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<bgcgfi> DECODER =
      new BinaryMessageDecoder<bgcgfi>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<bgcgfi> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<bgcgfi> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<bgcgfi> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<bgcgfi>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this bgcgfi to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a bgcgfi from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a bgcgfi instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static bgcgfi fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.CharSequence MSGTYPE;
   private java.lang.Integer MSGSEQNUM;
   private java.lang.CharSequence SENDERCOMPID;
   private java.lang.CharSequence SENDINGTIME;
   private java.lang.CharSequence TARGETCOMPID;
   private java.lang.CharSequence MDREQID;
   private java.lang.CharSequence MDUPDATEACTION;
   private java.lang.CharSequence FULLSYMBOL;
   private java.lang.CharSequence ISIN;
   private java.lang.Integer MDENTRYPX;
   private java.lang.CharSequence MDENTRYSIZE;
   private java.lang.CharSequence MDENTRYTYPE;
   private java.lang.CharSequence MDENTRYID;
   private java.lang.CharSequence TRADINGSESSIONID;
   private java.lang.CharSequence ORDERID;
   private java.lang.CharSequence MDENTRYDATE;
   private java.lang.CharSequence MDENTRYTIME;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public bgcgfi() {}

  /**
   * All-args constructor.
   * @param MSGTYPE The new value for MSGTYPE
   * @param MSGSEQNUM The new value for MSGSEQNUM
   * @param SENDERCOMPID The new value for SENDERCOMPID
   * @param SENDINGTIME The new value for SENDINGTIME
   * @param TARGETCOMPID The new value for TARGETCOMPID
   * @param MDREQID The new value for MDREQID
   * @param MDUPDATEACTION The new value for MDUPDATEACTION
   * @param FULLSYMBOL The new value for FULLSYMBOL
   * @param ISIN The new value for ISIN
   * @param MDENTRYPX The new value for MDENTRYPX
   * @param MDENTRYSIZE The new value for MDENTRYSIZE
   * @param MDENTRYTYPE The new value for MDENTRYTYPE
   * @param MDENTRYID The new value for MDENTRYID
   * @param TRADINGSESSIONID The new value for TRADINGSESSIONID
   * @param ORDERID The new value for ORDERID
   * @param MDENTRYDATE The new value for MDENTRYDATE
   * @param MDENTRYTIME The new value for MDENTRYTIME
   */
  public bgcgfi(java.lang.CharSequence MSGTYPE, java.lang.Integer MSGSEQNUM, java.lang.CharSequence SENDERCOMPID, java.lang.CharSequence SENDINGTIME, java.lang.CharSequence TARGETCOMPID, java.lang.CharSequence MDREQID, java.lang.CharSequence MDUPDATEACTION, java.lang.CharSequence FULLSYMBOL, java.lang.CharSequence ISIN, java.lang.Integer MDENTRYPX, java.lang.CharSequence MDENTRYSIZE, java.lang.CharSequence MDENTRYTYPE, java.lang.CharSequence MDENTRYID, java.lang.CharSequence TRADINGSESSIONID, java.lang.CharSequence ORDERID, java.lang.CharSequence MDENTRYDATE, java.lang.CharSequence MDENTRYTIME) {
    this.MSGTYPE = MSGTYPE;
    this.MSGSEQNUM = MSGSEQNUM;
    this.SENDERCOMPID = SENDERCOMPID;
    this.SENDINGTIME = SENDINGTIME;
    this.TARGETCOMPID = TARGETCOMPID;
    this.MDREQID = MDREQID;
    this.MDUPDATEACTION = MDUPDATEACTION;
    this.FULLSYMBOL = FULLSYMBOL;
    this.ISIN = ISIN;
    this.MDENTRYPX = MDENTRYPX;
    this.MDENTRYSIZE = MDENTRYSIZE;
    this.MDENTRYTYPE = MDENTRYTYPE;
    this.MDENTRYID = MDENTRYID;
    this.TRADINGSESSIONID = TRADINGSESSIONID;
    this.ORDERID = ORDERID;
    this.MDENTRYDATE = MDENTRYDATE;
    this.MDENTRYTIME = MDENTRYTIME;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return MSGTYPE;
    case 1: return MSGSEQNUM;
    case 2: return SENDERCOMPID;
    case 3: return SENDINGTIME;
    case 4: return TARGETCOMPID;
    case 5: return MDREQID;
    case 6: return MDUPDATEACTION;
    case 7: return FULLSYMBOL;
    case 8: return ISIN;
    case 9: return MDENTRYPX;
    case 10: return MDENTRYSIZE;
    case 11: return MDENTRYTYPE;
    case 12: return MDENTRYID;
    case 13: return TRADINGSESSIONID;
    case 14: return ORDERID;
    case 15: return MDENTRYDATE;
    case 16: return MDENTRYTIME;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: MSGTYPE = (java.lang.CharSequence)value$; break;
    case 1: MSGSEQNUM = (java.lang.Integer)value$; break;
    case 2: SENDERCOMPID = (java.lang.CharSequence)value$; break;
    case 3: SENDINGTIME = (java.lang.CharSequence)value$; break;
    case 4: TARGETCOMPID = (java.lang.CharSequence)value$; break;
    case 5: MDREQID = (java.lang.CharSequence)value$; break;
    case 6: MDUPDATEACTION = (java.lang.CharSequence)value$; break;
    case 7: FULLSYMBOL = (java.lang.CharSequence)value$; break;
    case 8: ISIN = (java.lang.CharSequence)value$; break;
    case 9: MDENTRYPX = (java.lang.Integer)value$; break;
    case 10: MDENTRYSIZE = (java.lang.CharSequence)value$; break;
    case 11: MDENTRYTYPE = (java.lang.CharSequence)value$; break;
    case 12: MDENTRYID = (java.lang.CharSequence)value$; break;
    case 13: TRADINGSESSIONID = (java.lang.CharSequence)value$; break;
    case 14: ORDERID = (java.lang.CharSequence)value$; break;
    case 15: MDENTRYDATE = (java.lang.CharSequence)value$; break;
    case 16: MDENTRYTIME = (java.lang.CharSequence)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'MSGTYPE' field.
   * @return The value of the 'MSGTYPE' field.
   */
  public java.lang.CharSequence getMSGTYPE() {
    return MSGTYPE;
  }


  /**
   * Sets the value of the 'MSGTYPE' field.
   * @param value the value to set.
   */
  public void setMSGTYPE(java.lang.CharSequence value) {
    this.MSGTYPE = value;
  }

  /**
   * Gets the value of the 'MSGSEQNUM' field.
   * @return The value of the 'MSGSEQNUM' field.
   */
  public java.lang.Integer getMSGSEQNUM() {
    return MSGSEQNUM;
  }


  /**
   * Sets the value of the 'MSGSEQNUM' field.
   * @param value the value to set.
   */
  public void setMSGSEQNUM(java.lang.Integer value) {
    this.MSGSEQNUM = value;
  }

  /**
   * Gets the value of the 'SENDERCOMPID' field.
   * @return The value of the 'SENDERCOMPID' field.
   */
  public java.lang.CharSequence getSENDERCOMPID() {
    return SENDERCOMPID;
  }


  /**
   * Sets the value of the 'SENDERCOMPID' field.
   * @param value the value to set.
   */
  public void setSENDERCOMPID(java.lang.CharSequence value) {
    this.SENDERCOMPID = value;
  }

  /**
   * Gets the value of the 'SENDINGTIME' field.
   * @return The value of the 'SENDINGTIME' field.
   */
  public java.lang.CharSequence getSENDINGTIME() {
    return SENDINGTIME;
  }


  /**
   * Sets the value of the 'SENDINGTIME' field.
   * @param value the value to set.
   */
  public void setSENDINGTIME(java.lang.CharSequence value) {
    this.SENDINGTIME = value;
  }

  /**
   * Gets the value of the 'TARGETCOMPID' field.
   * @return The value of the 'TARGETCOMPID' field.
   */
  public java.lang.CharSequence getTARGETCOMPID() {
    return TARGETCOMPID;
  }


  /**
   * Sets the value of the 'TARGETCOMPID' field.
   * @param value the value to set.
   */
  public void setTARGETCOMPID(java.lang.CharSequence value) {
    this.TARGETCOMPID = value;
  }

  /**
   * Gets the value of the 'MDREQID' field.
   * @return The value of the 'MDREQID' field.
   */
  public java.lang.CharSequence getMDREQID() {
    return MDREQID;
  }


  /**
   * Sets the value of the 'MDREQID' field.
   * @param value the value to set.
   */
  public void setMDREQID(java.lang.CharSequence value) {
    this.MDREQID = value;
  }

  /**
   * Gets the value of the 'MDUPDATEACTION' field.
   * @return The value of the 'MDUPDATEACTION' field.
   */
  public java.lang.CharSequence getMDUPDATEACTION() {
    return MDUPDATEACTION;
  }


  /**
   * Sets the value of the 'MDUPDATEACTION' field.
   * @param value the value to set.
   */
  public void setMDUPDATEACTION(java.lang.CharSequence value) {
    this.MDUPDATEACTION = value;
  }

  /**
   * Gets the value of the 'FULLSYMBOL' field.
   * @return The value of the 'FULLSYMBOL' field.
   */
  public java.lang.CharSequence getFULLSYMBOL() {
    return FULLSYMBOL;
  }


  /**
   * Sets the value of the 'FULLSYMBOL' field.
   * @param value the value to set.
   */
  public void setFULLSYMBOL(java.lang.CharSequence value) {
    this.FULLSYMBOL = value;
  }

  /**
   * Gets the value of the 'ISIN' field.
   * @return The value of the 'ISIN' field.
   */
  public java.lang.CharSequence getISIN() {
    return ISIN;
  }


  /**
   * Sets the value of the 'ISIN' field.
   * @param value the value to set.
   */
  public void setISIN(java.lang.CharSequence value) {
    this.ISIN = value;
  }

  /**
   * Gets the value of the 'MDENTRYPX' field.
   * @return The value of the 'MDENTRYPX' field.
   */
  public java.lang.Integer getMDENTRYPX() {
    return MDENTRYPX;
  }


  /**
   * Sets the value of the 'MDENTRYPX' field.
   * @param value the value to set.
   */
  public void setMDENTRYPX(java.lang.Integer value) {
    this.MDENTRYPX = value;
  }

  /**
   * Gets the value of the 'MDENTRYSIZE' field.
   * @return The value of the 'MDENTRYSIZE' field.
   */
  public java.lang.CharSequence getMDENTRYSIZE() {
    return MDENTRYSIZE;
  }


  /**
   * Sets the value of the 'MDENTRYSIZE' field.
   * @param value the value to set.
   */
  public void setMDENTRYSIZE(java.lang.CharSequence value) {
    this.MDENTRYSIZE = value;
  }

  /**
   * Gets the value of the 'MDENTRYTYPE' field.
   * @return The value of the 'MDENTRYTYPE' field.
   */
  public java.lang.CharSequence getMDENTRYTYPE() {
    return MDENTRYTYPE;
  }


  /**
   * Sets the value of the 'MDENTRYTYPE' field.
   * @param value the value to set.
   */
  public void setMDENTRYTYPE(java.lang.CharSequence value) {
    this.MDENTRYTYPE = value;
  }

  /**
   * Gets the value of the 'MDENTRYID' field.
   * @return The value of the 'MDENTRYID' field.
   */
  public java.lang.CharSequence getMDENTRYID() {
    return MDENTRYID;
  }


  /**
   * Sets the value of the 'MDENTRYID' field.
   * @param value the value to set.
   */
  public void setMDENTRYID(java.lang.CharSequence value) {
    this.MDENTRYID = value;
  }

  /**
   * Gets the value of the 'TRADINGSESSIONID' field.
   * @return The value of the 'TRADINGSESSIONID' field.
   */
  public java.lang.CharSequence getTRADINGSESSIONID() {
    return TRADINGSESSIONID;
  }


  /**
   * Sets the value of the 'TRADINGSESSIONID' field.
   * @param value the value to set.
   */
  public void setTRADINGSESSIONID(java.lang.CharSequence value) {
    this.TRADINGSESSIONID = value;
  }

  /**
   * Gets the value of the 'ORDERID' field.
   * @return The value of the 'ORDERID' field.
   */
  public java.lang.CharSequence getORDERID() {
    return ORDERID;
  }


  /**
   * Sets the value of the 'ORDERID' field.
   * @param value the value to set.
   */
  public void setORDERID(java.lang.CharSequence value) {
    this.ORDERID = value;
  }

  /**
   * Gets the value of the 'MDENTRYDATE' field.
   * @return The value of the 'MDENTRYDATE' field.
   */
  public java.lang.CharSequence getMDENTRYDATE() {
    return MDENTRYDATE;
  }


  /**
   * Sets the value of the 'MDENTRYDATE' field.
   * @param value the value to set.
   */
  public void setMDENTRYDATE(java.lang.CharSequence value) {
    this.MDENTRYDATE = value;
  }

  /**
   * Gets the value of the 'MDENTRYTIME' field.
   * @return The value of the 'MDENTRYTIME' field.
   */
  public java.lang.CharSequence getMDENTRYTIME() {
    return MDENTRYTIME;
  }


  /**
   * Sets the value of the 'MDENTRYTIME' field.
   * @param value the value to set.
   */
  public void setMDENTRYTIME(java.lang.CharSequence value) {
    this.MDENTRYTIME = value;
  }

  /**
   * Creates a new bgcgfi RecordBuilder.
   * @return A new bgcgfi RecordBuilder
   */
  public static com.custom.informatica.fab.credittrading.fix.bgcgfi.Builder newBuilder() {
    return new com.custom.informatica.fab.credittrading.fix.bgcgfi.Builder();
  }

  /**
   * Creates a new bgcgfi RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new bgcgfi RecordBuilder
   */
  public static com.custom.informatica.fab.credittrading.fix.bgcgfi.Builder newBuilder(com.custom.informatica.fab.credittrading.fix.bgcgfi.Builder other) {
    if (other == null) {
      return new com.custom.informatica.fab.credittrading.fix.bgcgfi.Builder();
    } else {
      return new com.custom.informatica.fab.credittrading.fix.bgcgfi.Builder(other);
    }
  }

  /**
   * Creates a new bgcgfi RecordBuilder by copying an existing bgcgfi instance.
   * @param other The existing instance to copy.
   * @return A new bgcgfi RecordBuilder
   */
  public static com.custom.informatica.fab.credittrading.fix.bgcgfi.Builder newBuilder(com.custom.informatica.fab.credittrading.fix.bgcgfi other) {
    if (other == null) {
      return new com.custom.informatica.fab.credittrading.fix.bgcgfi.Builder();
    } else {
      return new com.custom.informatica.fab.credittrading.fix.bgcgfi.Builder(other);
    }
  }

  /**
   * RecordBuilder for bgcgfi instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<bgcgfi>
    implements org.apache.avro.data.RecordBuilder<bgcgfi> {

    private java.lang.CharSequence MSGTYPE;
    private java.lang.Integer MSGSEQNUM;
    private java.lang.CharSequence SENDERCOMPID;
    private java.lang.CharSequence SENDINGTIME;
    private java.lang.CharSequence TARGETCOMPID;
    private java.lang.CharSequence MDREQID;
    private java.lang.CharSequence MDUPDATEACTION;
    private java.lang.CharSequence FULLSYMBOL;
    private java.lang.CharSequence ISIN;
    private java.lang.Integer MDENTRYPX;
    private java.lang.CharSequence MDENTRYSIZE;
    private java.lang.CharSequence MDENTRYTYPE;
    private java.lang.CharSequence MDENTRYID;
    private java.lang.CharSequence TRADINGSESSIONID;
    private java.lang.CharSequence ORDERID;
    private java.lang.CharSequence MDENTRYDATE;
    private java.lang.CharSequence MDENTRYTIME;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.custom.informatica.fab.credittrading.fix.bgcgfi.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.MSGTYPE)) {
        this.MSGTYPE = data().deepCopy(fields()[0].schema(), other.MSGTYPE);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.MSGSEQNUM)) {
        this.MSGSEQNUM = data().deepCopy(fields()[1].schema(), other.MSGSEQNUM);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.SENDERCOMPID)) {
        this.SENDERCOMPID = data().deepCopy(fields()[2].schema(), other.SENDERCOMPID);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.SENDINGTIME)) {
        this.SENDINGTIME = data().deepCopy(fields()[3].schema(), other.SENDINGTIME);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.TARGETCOMPID)) {
        this.TARGETCOMPID = data().deepCopy(fields()[4].schema(), other.TARGETCOMPID);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.MDREQID)) {
        this.MDREQID = data().deepCopy(fields()[5].schema(), other.MDREQID);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.MDUPDATEACTION)) {
        this.MDUPDATEACTION = data().deepCopy(fields()[6].schema(), other.MDUPDATEACTION);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.FULLSYMBOL)) {
        this.FULLSYMBOL = data().deepCopy(fields()[7].schema(), other.FULLSYMBOL);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.ISIN)) {
        this.ISIN = data().deepCopy(fields()[8].schema(), other.ISIN);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.MDENTRYPX)) {
        this.MDENTRYPX = data().deepCopy(fields()[9].schema(), other.MDENTRYPX);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.MDENTRYSIZE)) {
        this.MDENTRYSIZE = data().deepCopy(fields()[10].schema(), other.MDENTRYSIZE);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.MDENTRYTYPE)) {
        this.MDENTRYTYPE = data().deepCopy(fields()[11].schema(), other.MDENTRYTYPE);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.MDENTRYID)) {
        this.MDENTRYID = data().deepCopy(fields()[12].schema(), other.MDENTRYID);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.TRADINGSESSIONID)) {
        this.TRADINGSESSIONID = data().deepCopy(fields()[13].schema(), other.TRADINGSESSIONID);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (isValidValue(fields()[14], other.ORDERID)) {
        this.ORDERID = data().deepCopy(fields()[14].schema(), other.ORDERID);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
      if (isValidValue(fields()[15], other.MDENTRYDATE)) {
        this.MDENTRYDATE = data().deepCopy(fields()[15].schema(), other.MDENTRYDATE);
        fieldSetFlags()[15] = other.fieldSetFlags()[15];
      }
      if (isValidValue(fields()[16], other.MDENTRYTIME)) {
        this.MDENTRYTIME = data().deepCopy(fields()[16].schema(), other.MDENTRYTIME);
        fieldSetFlags()[16] = other.fieldSetFlags()[16];
      }
    }

    /**
     * Creates a Builder by copying an existing bgcgfi instance
     * @param other The existing instance to copy.
     */
    private Builder(com.custom.informatica.fab.credittrading.fix.bgcgfi other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.MSGTYPE)) {
        this.MSGTYPE = data().deepCopy(fields()[0].schema(), other.MSGTYPE);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.MSGSEQNUM)) {
        this.MSGSEQNUM = data().deepCopy(fields()[1].schema(), other.MSGSEQNUM);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.SENDERCOMPID)) {
        this.SENDERCOMPID = data().deepCopy(fields()[2].schema(), other.SENDERCOMPID);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.SENDINGTIME)) {
        this.SENDINGTIME = data().deepCopy(fields()[3].schema(), other.SENDINGTIME);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.TARGETCOMPID)) {
        this.TARGETCOMPID = data().deepCopy(fields()[4].schema(), other.TARGETCOMPID);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.MDREQID)) {
        this.MDREQID = data().deepCopy(fields()[5].schema(), other.MDREQID);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.MDUPDATEACTION)) {
        this.MDUPDATEACTION = data().deepCopy(fields()[6].schema(), other.MDUPDATEACTION);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.FULLSYMBOL)) {
        this.FULLSYMBOL = data().deepCopy(fields()[7].schema(), other.FULLSYMBOL);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.ISIN)) {
        this.ISIN = data().deepCopy(fields()[8].schema(), other.ISIN);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.MDENTRYPX)) {
        this.MDENTRYPX = data().deepCopy(fields()[9].schema(), other.MDENTRYPX);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.MDENTRYSIZE)) {
        this.MDENTRYSIZE = data().deepCopy(fields()[10].schema(), other.MDENTRYSIZE);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.MDENTRYTYPE)) {
        this.MDENTRYTYPE = data().deepCopy(fields()[11].schema(), other.MDENTRYTYPE);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.MDENTRYID)) {
        this.MDENTRYID = data().deepCopy(fields()[12].schema(), other.MDENTRYID);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.TRADINGSESSIONID)) {
        this.TRADINGSESSIONID = data().deepCopy(fields()[13].schema(), other.TRADINGSESSIONID);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.ORDERID)) {
        this.ORDERID = data().deepCopy(fields()[14].schema(), other.ORDERID);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.MDENTRYDATE)) {
        this.MDENTRYDATE = data().deepCopy(fields()[15].schema(), other.MDENTRYDATE);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.MDENTRYTIME)) {
        this.MDENTRYTIME = data().deepCopy(fields()[16].schema(), other.MDENTRYTIME);
        fieldSetFlags()[16] = true;
      }
    }

    /**
      * Gets the value of the 'MSGTYPE' field.
      * @return The value.
      */
    public java.lang.CharSequence getMSGTYPE() {
      return MSGTYPE;
    }


    /**
      * Sets the value of the 'MSGTYPE' field.
      * @param value The value of 'MSGTYPE'.
      * @return This builder.
      */
    public com.custom.informatica.fab.credittrading.fix.bgcgfi.Builder setMSGTYPE(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.MSGTYPE = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'MSGTYPE' field has been set.
      * @return True if the 'MSGTYPE' field has been set, false otherwise.
      */
    public boolean hasMSGTYPE() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'MSGTYPE' field.
      * @return This builder.
      */
    public com.custom.informatica.fab.credittrading.fix.bgcgfi.Builder clearMSGTYPE() {
      MSGTYPE = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'MSGSEQNUM' field.
      * @return The value.
      */
    public java.lang.Integer getMSGSEQNUM() {
      return MSGSEQNUM;
    }


    /**
      * Sets the value of the 'MSGSEQNUM' field.
      * @param value The value of 'MSGSEQNUM'.
      * @return This builder.
      */
    public com.custom.informatica.fab.credittrading.fix.bgcgfi.Builder setMSGSEQNUM(java.lang.Integer value) {
      validate(fields()[1], value);
      this.MSGSEQNUM = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'MSGSEQNUM' field has been set.
      * @return True if the 'MSGSEQNUM' field has been set, false otherwise.
      */
    public boolean hasMSGSEQNUM() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'MSGSEQNUM' field.
      * @return This builder.
      */
    public com.custom.informatica.fab.credittrading.fix.bgcgfi.Builder clearMSGSEQNUM() {
      MSGSEQNUM = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'SENDERCOMPID' field.
      * @return The value.
      */
    public java.lang.CharSequence getSENDERCOMPID() {
      return SENDERCOMPID;
    }


    /**
      * Sets the value of the 'SENDERCOMPID' field.
      * @param value The value of 'SENDERCOMPID'.
      * @return This builder.
      */
    public com.custom.informatica.fab.credittrading.fix.bgcgfi.Builder setSENDERCOMPID(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.SENDERCOMPID = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'SENDERCOMPID' field has been set.
      * @return True if the 'SENDERCOMPID' field has been set, false otherwise.
      */
    public boolean hasSENDERCOMPID() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'SENDERCOMPID' field.
      * @return This builder.
      */
    public com.custom.informatica.fab.credittrading.fix.bgcgfi.Builder clearSENDERCOMPID() {
      SENDERCOMPID = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'SENDINGTIME' field.
      * @return The value.
      */
    public java.lang.CharSequence getSENDINGTIME() {
      return SENDINGTIME;
    }


    /**
      * Sets the value of the 'SENDINGTIME' field.
      * @param value The value of 'SENDINGTIME'.
      * @return This builder.
      */
    public com.custom.informatica.fab.credittrading.fix.bgcgfi.Builder setSENDINGTIME(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.SENDINGTIME = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'SENDINGTIME' field has been set.
      * @return True if the 'SENDINGTIME' field has been set, false otherwise.
      */
    public boolean hasSENDINGTIME() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'SENDINGTIME' field.
      * @return This builder.
      */
    public com.custom.informatica.fab.credittrading.fix.bgcgfi.Builder clearSENDINGTIME() {
      SENDINGTIME = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'TARGETCOMPID' field.
      * @return The value.
      */
    public java.lang.CharSequence getTARGETCOMPID() {
      return TARGETCOMPID;
    }


    /**
      * Sets the value of the 'TARGETCOMPID' field.
      * @param value The value of 'TARGETCOMPID'.
      * @return This builder.
      */
    public com.custom.informatica.fab.credittrading.fix.bgcgfi.Builder setTARGETCOMPID(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.TARGETCOMPID = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'TARGETCOMPID' field has been set.
      * @return True if the 'TARGETCOMPID' field has been set, false otherwise.
      */
    public boolean hasTARGETCOMPID() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'TARGETCOMPID' field.
      * @return This builder.
      */
    public com.custom.informatica.fab.credittrading.fix.bgcgfi.Builder clearTARGETCOMPID() {
      TARGETCOMPID = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'MDREQID' field.
      * @return The value.
      */
    public java.lang.CharSequence getMDREQID() {
      return MDREQID;
    }


    /**
      * Sets the value of the 'MDREQID' field.
      * @param value The value of 'MDREQID'.
      * @return This builder.
      */
    public com.custom.informatica.fab.credittrading.fix.bgcgfi.Builder setMDREQID(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.MDREQID = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'MDREQID' field has been set.
      * @return True if the 'MDREQID' field has been set, false otherwise.
      */
    public boolean hasMDREQID() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'MDREQID' field.
      * @return This builder.
      */
    public com.custom.informatica.fab.credittrading.fix.bgcgfi.Builder clearMDREQID() {
      MDREQID = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'MDUPDATEACTION' field.
      * @return The value.
      */
    public java.lang.CharSequence getMDUPDATEACTION() {
      return MDUPDATEACTION;
    }


    /**
      * Sets the value of the 'MDUPDATEACTION' field.
      * @param value The value of 'MDUPDATEACTION'.
      * @return This builder.
      */
    public com.custom.informatica.fab.credittrading.fix.bgcgfi.Builder setMDUPDATEACTION(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.MDUPDATEACTION = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'MDUPDATEACTION' field has been set.
      * @return True if the 'MDUPDATEACTION' field has been set, false otherwise.
      */
    public boolean hasMDUPDATEACTION() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'MDUPDATEACTION' field.
      * @return This builder.
      */
    public com.custom.informatica.fab.credittrading.fix.bgcgfi.Builder clearMDUPDATEACTION() {
      MDUPDATEACTION = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'FULLSYMBOL' field.
      * @return The value.
      */
    public java.lang.CharSequence getFULLSYMBOL() {
      return FULLSYMBOL;
    }


    /**
      * Sets the value of the 'FULLSYMBOL' field.
      * @param value The value of 'FULLSYMBOL'.
      * @return This builder.
      */
    public com.custom.informatica.fab.credittrading.fix.bgcgfi.Builder setFULLSYMBOL(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.FULLSYMBOL = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'FULLSYMBOL' field has been set.
      * @return True if the 'FULLSYMBOL' field has been set, false otherwise.
      */
    public boolean hasFULLSYMBOL() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'FULLSYMBOL' field.
      * @return This builder.
      */
    public com.custom.informatica.fab.credittrading.fix.bgcgfi.Builder clearFULLSYMBOL() {
      FULLSYMBOL = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'ISIN' field.
      * @return The value.
      */
    public java.lang.CharSequence getISIN() {
      return ISIN;
    }


    /**
      * Sets the value of the 'ISIN' field.
      * @param value The value of 'ISIN'.
      * @return This builder.
      */
    public com.custom.informatica.fab.credittrading.fix.bgcgfi.Builder setISIN(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.ISIN = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'ISIN' field has been set.
      * @return True if the 'ISIN' field has been set, false otherwise.
      */
    public boolean hasISIN() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'ISIN' field.
      * @return This builder.
      */
    public com.custom.informatica.fab.credittrading.fix.bgcgfi.Builder clearISIN() {
      ISIN = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'MDENTRYPX' field.
      * @return The value.
      */
    public java.lang.Integer getMDENTRYPX() {
      return MDENTRYPX;
    }


    /**
      * Sets the value of the 'MDENTRYPX' field.
      * @param value The value of 'MDENTRYPX'.
      * @return This builder.
      */
    public com.custom.informatica.fab.credittrading.fix.bgcgfi.Builder setMDENTRYPX(java.lang.Integer value) {
      validate(fields()[9], value);
      this.MDENTRYPX = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'MDENTRYPX' field has been set.
      * @return True if the 'MDENTRYPX' field has been set, false otherwise.
      */
    public boolean hasMDENTRYPX() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'MDENTRYPX' field.
      * @return This builder.
      */
    public com.custom.informatica.fab.credittrading.fix.bgcgfi.Builder clearMDENTRYPX() {
      MDENTRYPX = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'MDENTRYSIZE' field.
      * @return The value.
      */
    public java.lang.CharSequence getMDENTRYSIZE() {
      return MDENTRYSIZE;
    }


    /**
      * Sets the value of the 'MDENTRYSIZE' field.
      * @param value The value of 'MDENTRYSIZE'.
      * @return This builder.
      */
    public com.custom.informatica.fab.credittrading.fix.bgcgfi.Builder setMDENTRYSIZE(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.MDENTRYSIZE = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'MDENTRYSIZE' field has been set.
      * @return True if the 'MDENTRYSIZE' field has been set, false otherwise.
      */
    public boolean hasMDENTRYSIZE() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'MDENTRYSIZE' field.
      * @return This builder.
      */
    public com.custom.informatica.fab.credittrading.fix.bgcgfi.Builder clearMDENTRYSIZE() {
      MDENTRYSIZE = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'MDENTRYTYPE' field.
      * @return The value.
      */
    public java.lang.CharSequence getMDENTRYTYPE() {
      return MDENTRYTYPE;
    }


    /**
      * Sets the value of the 'MDENTRYTYPE' field.
      * @param value The value of 'MDENTRYTYPE'.
      * @return This builder.
      */
    public com.custom.informatica.fab.credittrading.fix.bgcgfi.Builder setMDENTRYTYPE(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.MDENTRYTYPE = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'MDENTRYTYPE' field has been set.
      * @return True if the 'MDENTRYTYPE' field has been set, false otherwise.
      */
    public boolean hasMDENTRYTYPE() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'MDENTRYTYPE' field.
      * @return This builder.
      */
    public com.custom.informatica.fab.credittrading.fix.bgcgfi.Builder clearMDENTRYTYPE() {
      MDENTRYTYPE = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'MDENTRYID' field.
      * @return The value.
      */
    public java.lang.CharSequence getMDENTRYID() {
      return MDENTRYID;
    }


    /**
      * Sets the value of the 'MDENTRYID' field.
      * @param value The value of 'MDENTRYID'.
      * @return This builder.
      */
    public com.custom.informatica.fab.credittrading.fix.bgcgfi.Builder setMDENTRYID(java.lang.CharSequence value) {
      validate(fields()[12], value);
      this.MDENTRYID = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'MDENTRYID' field has been set.
      * @return True if the 'MDENTRYID' field has been set, false otherwise.
      */
    public boolean hasMDENTRYID() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'MDENTRYID' field.
      * @return This builder.
      */
    public com.custom.informatica.fab.credittrading.fix.bgcgfi.Builder clearMDENTRYID() {
      MDENTRYID = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'TRADINGSESSIONID' field.
      * @return The value.
      */
    public java.lang.CharSequence getTRADINGSESSIONID() {
      return TRADINGSESSIONID;
    }


    /**
      * Sets the value of the 'TRADINGSESSIONID' field.
      * @param value The value of 'TRADINGSESSIONID'.
      * @return This builder.
      */
    public com.custom.informatica.fab.credittrading.fix.bgcgfi.Builder setTRADINGSESSIONID(java.lang.CharSequence value) {
      validate(fields()[13], value);
      this.TRADINGSESSIONID = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'TRADINGSESSIONID' field has been set.
      * @return True if the 'TRADINGSESSIONID' field has been set, false otherwise.
      */
    public boolean hasTRADINGSESSIONID() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'TRADINGSESSIONID' field.
      * @return This builder.
      */
    public com.custom.informatica.fab.credittrading.fix.bgcgfi.Builder clearTRADINGSESSIONID() {
      TRADINGSESSIONID = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'ORDERID' field.
      * @return The value.
      */
    public java.lang.CharSequence getORDERID() {
      return ORDERID;
    }


    /**
      * Sets the value of the 'ORDERID' field.
      * @param value The value of 'ORDERID'.
      * @return This builder.
      */
    public com.custom.informatica.fab.credittrading.fix.bgcgfi.Builder setORDERID(java.lang.CharSequence value) {
      validate(fields()[14], value);
      this.ORDERID = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'ORDERID' field has been set.
      * @return True if the 'ORDERID' field has been set, false otherwise.
      */
    public boolean hasORDERID() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'ORDERID' field.
      * @return This builder.
      */
    public com.custom.informatica.fab.credittrading.fix.bgcgfi.Builder clearORDERID() {
      ORDERID = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'MDENTRYDATE' field.
      * @return The value.
      */
    public java.lang.CharSequence getMDENTRYDATE() {
      return MDENTRYDATE;
    }


    /**
      * Sets the value of the 'MDENTRYDATE' field.
      * @param value The value of 'MDENTRYDATE'.
      * @return This builder.
      */
    public com.custom.informatica.fab.credittrading.fix.bgcgfi.Builder setMDENTRYDATE(java.lang.CharSequence value) {
      validate(fields()[15], value);
      this.MDENTRYDATE = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'MDENTRYDATE' field has been set.
      * @return True if the 'MDENTRYDATE' field has been set, false otherwise.
      */
    public boolean hasMDENTRYDATE() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'MDENTRYDATE' field.
      * @return This builder.
      */
    public com.custom.informatica.fab.credittrading.fix.bgcgfi.Builder clearMDENTRYDATE() {
      MDENTRYDATE = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'MDENTRYTIME' field.
      * @return The value.
      */
    public java.lang.CharSequence getMDENTRYTIME() {
      return MDENTRYTIME;
    }


    /**
      * Sets the value of the 'MDENTRYTIME' field.
      * @param value The value of 'MDENTRYTIME'.
      * @return This builder.
      */
    public com.custom.informatica.fab.credittrading.fix.bgcgfi.Builder setMDENTRYTIME(java.lang.CharSequence value) {
      validate(fields()[16], value);
      this.MDENTRYTIME = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'MDENTRYTIME' field has been set.
      * @return True if the 'MDENTRYTIME' field has been set, false otherwise.
      */
    public boolean hasMDENTRYTIME() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'MDENTRYTIME' field.
      * @return This builder.
      */
    public com.custom.informatica.fab.credittrading.fix.bgcgfi.Builder clearMDENTRYTIME() {
      MDENTRYTIME = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public bgcgfi build() {
      try {
        bgcgfi record = new bgcgfi();
        record.MSGTYPE = fieldSetFlags()[0] ? this.MSGTYPE : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.MSGSEQNUM = fieldSetFlags()[1] ? this.MSGSEQNUM : (java.lang.Integer) defaultValue(fields()[1]);
        record.SENDERCOMPID = fieldSetFlags()[2] ? this.SENDERCOMPID : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.SENDINGTIME = fieldSetFlags()[3] ? this.SENDINGTIME : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.TARGETCOMPID = fieldSetFlags()[4] ? this.TARGETCOMPID : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.MDREQID = fieldSetFlags()[5] ? this.MDREQID : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.MDUPDATEACTION = fieldSetFlags()[6] ? this.MDUPDATEACTION : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.FULLSYMBOL = fieldSetFlags()[7] ? this.FULLSYMBOL : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.ISIN = fieldSetFlags()[8] ? this.ISIN : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.MDENTRYPX = fieldSetFlags()[9] ? this.MDENTRYPX : (java.lang.Integer) defaultValue(fields()[9]);
        record.MDENTRYSIZE = fieldSetFlags()[10] ? this.MDENTRYSIZE : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.MDENTRYTYPE = fieldSetFlags()[11] ? this.MDENTRYTYPE : (java.lang.CharSequence) defaultValue(fields()[11]);
        record.MDENTRYID = fieldSetFlags()[12] ? this.MDENTRYID : (java.lang.CharSequence) defaultValue(fields()[12]);
        record.TRADINGSESSIONID = fieldSetFlags()[13] ? this.TRADINGSESSIONID : (java.lang.CharSequence) defaultValue(fields()[13]);
        record.ORDERID = fieldSetFlags()[14] ? this.ORDERID : (java.lang.CharSequence) defaultValue(fields()[14]);
        record.MDENTRYDATE = fieldSetFlags()[15] ? this.MDENTRYDATE : (java.lang.CharSequence) defaultValue(fields()[15]);
        record.MDENTRYTIME = fieldSetFlags()[16] ? this.MDENTRYTIME : (java.lang.CharSequence) defaultValue(fields()[16]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<bgcgfi>
    WRITER$ = (org.apache.avro.io.DatumWriter<bgcgfi>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<bgcgfi>
    READER$ = (org.apache.avro.io.DatumReader<bgcgfi>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.MSGTYPE == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.MSGTYPE);
    }

    if (this.MSGSEQNUM == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeInt(this.MSGSEQNUM);
    }

    if (this.SENDERCOMPID == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.SENDERCOMPID);
    }

    if (this.SENDINGTIME == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.SENDINGTIME);
    }

    if (this.TARGETCOMPID == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.TARGETCOMPID);
    }

    if (this.MDREQID == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.MDREQID);
    }

    if (this.MDUPDATEACTION == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.MDUPDATEACTION);
    }

    if (this.FULLSYMBOL == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.FULLSYMBOL);
    }

    if (this.ISIN == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.ISIN);
    }

    if (this.MDENTRYPX == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeInt(this.MDENTRYPX);
    }

    if (this.MDENTRYSIZE == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.MDENTRYSIZE);
    }

    if (this.MDENTRYTYPE == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.MDENTRYTYPE);
    }

    if (this.MDENTRYID == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.MDENTRYID);
    }

    if (this.TRADINGSESSIONID == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.TRADINGSESSIONID);
    }

    if (this.ORDERID == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.ORDERID);
    }

    if (this.MDENTRYDATE == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.MDENTRYDATE);
    }

    if (this.MDENTRYTIME == null) {
      out.writeIndex(1);
      out.writeNull();
    } else {
      out.writeIndex(0);
      out.writeString(this.MDENTRYTIME);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 0) {
        in.readNull();
        this.MSGTYPE = null;
      } else {
        this.MSGTYPE = in.readString(this.MSGTYPE instanceof Utf8 ? (Utf8)this.MSGTYPE : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.MSGSEQNUM = null;
      } else {
        this.MSGSEQNUM = in.readInt();
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.SENDERCOMPID = null;
      } else {
        this.SENDERCOMPID = in.readString(this.SENDERCOMPID instanceof Utf8 ? (Utf8)this.SENDERCOMPID : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.SENDINGTIME = null;
      } else {
        this.SENDINGTIME = in.readString(this.SENDINGTIME instanceof Utf8 ? (Utf8)this.SENDINGTIME : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.TARGETCOMPID = null;
      } else {
        this.TARGETCOMPID = in.readString(this.TARGETCOMPID instanceof Utf8 ? (Utf8)this.TARGETCOMPID : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.MDREQID = null;
      } else {
        this.MDREQID = in.readString(this.MDREQID instanceof Utf8 ? (Utf8)this.MDREQID : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.MDUPDATEACTION = null;
      } else {
        this.MDUPDATEACTION = in.readString(this.MDUPDATEACTION instanceof Utf8 ? (Utf8)this.MDUPDATEACTION : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.FULLSYMBOL = null;
      } else {
        this.FULLSYMBOL = in.readString(this.FULLSYMBOL instanceof Utf8 ? (Utf8)this.FULLSYMBOL : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.ISIN = null;
      } else {
        this.ISIN = in.readString(this.ISIN instanceof Utf8 ? (Utf8)this.ISIN : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.MDENTRYPX = null;
      } else {
        this.MDENTRYPX = in.readInt();
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.MDENTRYSIZE = null;
      } else {
        this.MDENTRYSIZE = in.readString(this.MDENTRYSIZE instanceof Utf8 ? (Utf8)this.MDENTRYSIZE : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.MDENTRYTYPE = null;
      } else {
        this.MDENTRYTYPE = in.readString(this.MDENTRYTYPE instanceof Utf8 ? (Utf8)this.MDENTRYTYPE : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.MDENTRYID = null;
      } else {
        this.MDENTRYID = in.readString(this.MDENTRYID instanceof Utf8 ? (Utf8)this.MDENTRYID : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.TRADINGSESSIONID = null;
      } else {
        this.TRADINGSESSIONID = in.readString(this.TRADINGSESSIONID instanceof Utf8 ? (Utf8)this.TRADINGSESSIONID : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.ORDERID = null;
      } else {
        this.ORDERID = in.readString(this.ORDERID instanceof Utf8 ? (Utf8)this.ORDERID : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.MDENTRYDATE = null;
      } else {
        this.MDENTRYDATE = in.readString(this.MDENTRYDATE instanceof Utf8 ? (Utf8)this.MDENTRYDATE : null);
      }

      if (in.readIndex() != 0) {
        in.readNull();
        this.MDENTRYTIME = null;
      } else {
        this.MDENTRYTIME = in.readString(this.MDENTRYTIME instanceof Utf8 ? (Utf8)this.MDENTRYTIME : null);
      }

    } else {
      for (int i = 0; i < 17; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 0) {
            in.readNull();
            this.MSGTYPE = null;
          } else {
            this.MSGTYPE = in.readString(this.MSGTYPE instanceof Utf8 ? (Utf8)this.MSGTYPE : null);
          }
          break;

        case 1:
          if (in.readIndex() != 0) {
            in.readNull();
            this.MSGSEQNUM = null;
          } else {
            this.MSGSEQNUM = in.readInt();
          }
          break;

        case 2:
          if (in.readIndex() != 0) {
            in.readNull();
            this.SENDERCOMPID = null;
          } else {
            this.SENDERCOMPID = in.readString(this.SENDERCOMPID instanceof Utf8 ? (Utf8)this.SENDERCOMPID : null);
          }
          break;

        case 3:
          if (in.readIndex() != 0) {
            in.readNull();
            this.SENDINGTIME = null;
          } else {
            this.SENDINGTIME = in.readString(this.SENDINGTIME instanceof Utf8 ? (Utf8)this.SENDINGTIME : null);
          }
          break;

        case 4:
          if (in.readIndex() != 0) {
            in.readNull();
            this.TARGETCOMPID = null;
          } else {
            this.TARGETCOMPID = in.readString(this.TARGETCOMPID instanceof Utf8 ? (Utf8)this.TARGETCOMPID : null);
          }
          break;

        case 5:
          if (in.readIndex() != 0) {
            in.readNull();
            this.MDREQID = null;
          } else {
            this.MDREQID = in.readString(this.MDREQID instanceof Utf8 ? (Utf8)this.MDREQID : null);
          }
          break;

        case 6:
          if (in.readIndex() != 0) {
            in.readNull();
            this.MDUPDATEACTION = null;
          } else {
            this.MDUPDATEACTION = in.readString(this.MDUPDATEACTION instanceof Utf8 ? (Utf8)this.MDUPDATEACTION : null);
          }
          break;

        case 7:
          if (in.readIndex() != 0) {
            in.readNull();
            this.FULLSYMBOL = null;
          } else {
            this.FULLSYMBOL = in.readString(this.FULLSYMBOL instanceof Utf8 ? (Utf8)this.FULLSYMBOL : null);
          }
          break;

        case 8:
          if (in.readIndex() != 0) {
            in.readNull();
            this.ISIN = null;
          } else {
            this.ISIN = in.readString(this.ISIN instanceof Utf8 ? (Utf8)this.ISIN : null);
          }
          break;

        case 9:
          if (in.readIndex() != 0) {
            in.readNull();
            this.MDENTRYPX = null;
          } else {
            this.MDENTRYPX = in.readInt();
          }
          break;

        case 10:
          if (in.readIndex() != 0) {
            in.readNull();
            this.MDENTRYSIZE = null;
          } else {
            this.MDENTRYSIZE = in.readString(this.MDENTRYSIZE instanceof Utf8 ? (Utf8)this.MDENTRYSIZE : null);
          }
          break;

        case 11:
          if (in.readIndex() != 0) {
            in.readNull();
            this.MDENTRYTYPE = null;
          } else {
            this.MDENTRYTYPE = in.readString(this.MDENTRYTYPE instanceof Utf8 ? (Utf8)this.MDENTRYTYPE : null);
          }
          break;

        case 12:
          if (in.readIndex() != 0) {
            in.readNull();
            this.MDENTRYID = null;
          } else {
            this.MDENTRYID = in.readString(this.MDENTRYID instanceof Utf8 ? (Utf8)this.MDENTRYID : null);
          }
          break;

        case 13:
          if (in.readIndex() != 0) {
            in.readNull();
            this.TRADINGSESSIONID = null;
          } else {
            this.TRADINGSESSIONID = in.readString(this.TRADINGSESSIONID instanceof Utf8 ? (Utf8)this.TRADINGSESSIONID : null);
          }
          break;

        case 14:
          if (in.readIndex() != 0) {
            in.readNull();
            this.ORDERID = null;
          } else {
            this.ORDERID = in.readString(this.ORDERID instanceof Utf8 ? (Utf8)this.ORDERID : null);
          }
          break;

        case 15:
          if (in.readIndex() != 0) {
            in.readNull();
            this.MDENTRYDATE = null;
          } else {
            this.MDENTRYDATE = in.readString(this.MDENTRYDATE instanceof Utf8 ? (Utf8)this.MDENTRYDATE : null);
          }
          break;

        case 16:
          if (in.readIndex() != 0) {
            in.readNull();
            this.MDENTRYTIME = null;
          } else {
            this.MDENTRYTIME = in.readString(this.MDENTRYTIME instanceof Utf8 ? (Utf8)this.MDENTRYTIME : null);
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










